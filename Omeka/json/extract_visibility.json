[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "o:is_public",
    "expression": "jython:if value == \"1\":\n    return \"PUBLIC_ITEM\"\nif value == None:\n    return \"PRIVATE_ITEM\"\nreturn \"ILLEGAL_VALUE\"",
    "onError": "set-to-blank",
    "newColumnName": "item_public",
    "columnInsertIndex": 5,
    "description": "Créer la colonne item_public à lindex {1} sur la base de la colonne {2} à laide de lexpression {3}"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "o-module-group:group",
    "expression": "jython:try:\n    cells[\"o-module-group:group\"]\nexcept KeyError:\n    return \"ITEM_GROUPLESS\"\nelse:\n    return \"ITEM_HAVE_GROUPS\"",
    "onError": "set-to-blank",
    "newColumnName": "item_groups",
    "columnInsertIndex": 26,
    "description": "Créer la colonne item_groups à lindex {1} sur la base de la colonne {2} à laide de lexpression {3}"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "o:id",
    "expression": "jython:import json\n\ntry:\n    cells[\"media:full\"]\nexcept KeyError:\n    return \"NO_MEDIA\"\n\nmedias = cells[\"media:full\"].value[:-1]\nmedias = medias.split(\";\")\nmedias = \"[\" + \",\".join(medias) + \"]\"\nmedias = json.loads(medias)\n\nmedias_public = False\nmedias_private = False\nfor media in medias:\n    if media[\"o:is_public\"]:\n        medias_public = True\n    else:\n        medias_private = True\n\nif medias_public and not medias_private:\n    return \"PUBLIC_MEDIAS\"\nelif not medias_public and medias_private:\n    return \"PRIVATE_MEDIAS\"\nelse:\n    return \"HYBRID_MEDIAS_VISIBILITY\"",
    "onError": "set-to-blank",
    "newColumnName": "medias_public",
    "columnInsertIndex": 4,
    "description": "Créer la colonne medias_public à lindex {1} sur la base de la colonne {2} à laide de lexpression {3}"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "o:id",
    "expression": "jython:import json\n\ntry:\n    cells[\"media:full\"]\nexcept KeyError:\n    return \"NO_MEDIA\"\n\nmedias = cells[\"media:full\"].value[:-1]\nmedias = medias.split(\";\")\nmedias = \"[\" + \",\".join(medias) + \"]\"\nmedias = json.loads(medias)\n\nmedias_have_groups = False\nmedias_dont_have_groups = False\nfor media in medias:\n    if len(media[\"o-module-group:group\"]) > 0:\n        medias_have_groups = True\n    else:\n        medias_dont_have_groups = True\n\nif medias_have_groups and not medias_dont_have_groups:\n    return \"MEDIAS_HAVE_GROUPS\"\nelif not medias_have_groups and medias_dont_have_groups:\n    return \"MEDIAS_GROUPLESS\"\nelse:\n    return \"MEDIA_HYBRID_GROUP\"",
    "onError": "set-to-blank",
    "newColumnName": "medias_groups",
    "columnInsertIndex": 4,
    "description": "Créer la colonne medias_groups à lindex {1} sur la base de la colonne {2} à laide de lexpression {3}"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "o:id",
    "expression": "jython:if cells[\"medias_public\"].value == \"NO_MEDIA\":\n    if cells[\"item_public\"].value == \"PUBLIC_ITEM\":\n        return \"PUBLIC_-_MEDIALESS\"\n    if cells[\"item_public\"].value == \"PRIVATE_ITEM\" and cells[\"item_groups\"].value == \"ITEM_HAVE_GROUPS\":\n        return \"AUTHENTIFICATION_-_MEDIALESS\"\n    if cells[\"item_public\"].value == \"PRIVATE_ITEM\" and cells[\"item_groups\"].value == \"ITEM_GROUPLESS\":\n        return \"PRIVATE_-_MEDIALESS\"\n    return \"[WARNING]_ILLEGAL_ITEM_VISIBILITY\"\nif cells[\"medias_public\"].value == \"PUBLIC_MEDIAS\":\n    if cells[\"item_public\"].value == \"PUBLIC_ITEM\":\n        return \"PUBLIC\"\n    if cells[\"item_public\"].value == \"PRIVATE_ITEM\":\n        return \"[WARNING]_PRIVATE_ITEM_WITH_PUBLIC_MEDIAS\"\n    return \"[WARNING]_PUBLIC_MEDIAS_ILLEGAL_ITEM_VISIBILITY\"\nif cells[\"medias_public\"].value == \"HYBRID_MEDIAS_VISIBILITY\":\n    if cells[\"item_public\"].value == \"PUBLIC_ITEM\":\n        return \"HYBRID\"\n    if cells[\"item_public\"].value == \"PRIVATE_ITEM\":\n        return \"[WARNING]_PRIVATE_ITEM_WITH_HYBRID_MEDIAS\"\n    return \"[WARNING]_HYBRID_MEDIAS_ILLEGAL_ITEM_VISIBILITY\"\nif cells[\"medias_public\"].value == \"PRIVATE_MEDIAS\":\n    if cells[\"medias_groups\"].value == \"MEDIAS_HAVE_GROUPS\":\n        return \"AUTHENTIFICATION\"\n    if cells[\"medias_groups\"].value == \"MEDIAS_GROUPLESS\":\n        return \"PRIVATE\"\n    if cells[\"medias_groups\"].value == \"MEDIA_HYBRID_GROUP\":\n        return \"HYBRID_AUTH_PRIVATE\"\n    return \"[WARNING]_PRIVATE_MEDIAS_ILLEGAL_VISIBILITY\"",
    "onError": "set-to-blank",
    "newColumnName": "summary",
    "columnInsertIndex": 4,
    "description": "Créer la colonne summary à lindex {1} sur la base de la colonne {2} à laide de lexpression {3}"
  },
  {
    "op": "core/column-reorder",
    "columnNames": [
      "o:id",
      "koha:biblionumber",
      "summary",
      "item_public",
      "item_groups",
      "medias_public",
      "medias_groups"
    ],
    "description": "Reordonner les colonnes"
  }
]